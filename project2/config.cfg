# Just copy and paste this.
import os

# General
data_path = "../data/in/"  # Where is your input data
work_path = "../data/out/"  # Where everything will be saved
seed = 1337  # Random seed
verbose = 2  # 0: no output; 1: normal informations; 2: e v e r y th i n g

# DataFrame
dataframe_pickle_path = os.path.join(work_path, "dataframe.pickle")  # Where will the DataFrame be saved
force_preparation = True  # Do you want to bypassed the saved DataFrame
subsamples = -1  # Number of samples to use for the DataFrame; -1: Use all of them

# ImagesData
imagesdata_pickle_path = os.path.join(work_path, 'imagesdata.pickle')  # Where will the ImagesData be saved
number_of_results = 2500  # How many samples will selective search use
iou_threshold = 0.85  # What is the percent of precision required
max_samples = 15  # How many class samples do you want
show_infos = True  # Show information for images output
show_labels = True  # Show labels for images output

# RCNN
model_and_weights_path = "../data/out/"  # Where will the model and weights be saved/loaded
loss = None  # Loss function; None: Use
opt = None  # Optimization function; None: Use Adame
lr = 0.001  # Learning rate
epochs = 100  # Number of epochs
split_size = 0.15  # Test/Train proportion
checkpoint_path = os.path.join(work_path, 'checkpoint.h5')  # Where will the checkpoints be saved; None: No checkpoint (don't.)
early_stopping = True  # Should the learning stop if no more improvment is done
threshold = 0.85  # Threshold used for the recognition